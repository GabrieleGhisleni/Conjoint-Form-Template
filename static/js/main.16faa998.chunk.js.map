{"version":3,"sources":["reportWebVitals.js","components/shared/settings.js","components/CustomForm.jsx","components/shuffle.js","components/shared/text.js","components/Header.jsx","components/Footer.jsx","components/Main.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SETTINGS","jsonbin","product_profiles","n_attributes","n_questions","it","attributes","mask","en","CustomForm","props","n_question","DATA","data","useState","Set","selected","setselected","control","setcontrol","j","trial","saveSelect","id","idx","row_check","Math","floor","has","document","getElementById","style","backgroundColor","prev","filter","x","add","length","alert","useEffect","forEach","r","box","btn","innerText","renderedOptions","slice","map","HandleChecked","color","className","onClick","lang","toast","error","AttributesLevels","renderedAttributes","i","push","xs","sm","Attributes","window","innerWidth","size","missing","join","FRESH_DATA","isChoiced","axios","res","success","padding","catch","e","console","log","JSON","stringify","message","onFinalSubmit","shuffle_data","arr","temp","index","shuffled","random","getRandomSubarray","TEXT","title","description","h2","url","Header","Fragment","src","process","alt","fontSize","md","langF","countryCode","svg","width","height","allowFullScreen","allow","scrollIntoView","behavior","Footer","paddingTop","type","href","Main","state","previous","changeLang","bind","val","this","setState","SHUFFLE_DATA","Component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.16faa998.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SETTINGS = {\r\n    jsonbin: \"<your_api_kei>\",\r\n    product_profiles:3,\r\n    n_attributes:5,\r\n    n_questions:15, \r\n\r\n    it: {\r\n        attributes: {\r\n            0: \"Dispositivo\",\r\n            1: \"Dashboard\",\r\n            2: \"Max Categorie\",\r\n            3: \"Max Subcategorie\",\r\n            4: \"Prezzo\",\r\n        },\r\n        mask:{\r\n            0: {0:'Web App', 1:'Mobile App'},\r\n            1: {0:'Grafiche avanzate', 1:'Grafiche base'},\r\n            2: {0:'Categorie 5 ', 1:'Categorie 10', 2:'Categorie 15'},\r\n            3: {0:'Sottocategorie 10', 1:'Sottocategorie  20', 2:'Sottocategorie  50'},\r\n            4: {0:'Gratis', 1:'1$/month', 2:'Once 5$'},\r\n        }\r\n    },\r\n\r\n    // ENGLISH\r\n    en: {\r\n        attributes: {\r\n            0: \"Device\",\r\n            1: \"Dashboard\",\r\n            2: \"Max Categorie\",\r\n            3: \"Max Subcategorie\",\r\n            4: \"Prezzo\",\r\n        },\r\n        mask:{\r\n            0: {0:'Web App', 1:'Mobile App'},\r\n            1: {0:'Advanced graphics', 1:'Restricted graphics'},\r\n            2: {0:'5 categories', 1:'10 categories', 2:'15 categories'},\r\n            3: {0:'5 subcategories', 1:'10 subcategories', 2:'15 subcategories'},\r\n            4: {0:'5$', 1:'10$', 2:'15$'},\r\n\r\n        }\r\n    },\r\n};\r\n","import { Button, Row, Col, Container } from \"reactstrap\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { SETTINGS } from \"./shared/settings\"\r\nimport * as axios from 'axios'\r\n\r\nconst CustomForm = (props) => {\r\n\r\n    const product_profiles = SETTINGS.product_profiles\r\n    const n_attributes = SETTINGS.n_attributes\r\n    const n_question = SETTINGS.n_questions\r\n    const DATA = props.data\r\n\r\n    const [selected, setselected] = useState(new Set())\r\n    const [control, setcontrol] = useState(new Set())\r\n    var [j, trial] = [0, [], []];\r\n\r\n    if (DATA.length % product_profiles !== 0) alert(\"Number of questions wrong!\")  \r\n\r\n    useEffect(() => {\r\n        selected.forEach(r => {\r\n            let box = document.getElementById(`row-${r}`)\r\n            let btn = document.getElementById(`btn-${r}`)\r\n            box.style.backgroundColor = \"lightgreen\" \r\n            btn.style.backgroundColor ='rgba(182, 41, 41,0.9)'\r\n            btn.innerText='Deselect'\r\n            })})\r\n\r\n    function saveSelect(id, idx){\r\n        var row_check = Math.floor(idx/2.9)\r\n        if (selected.has(id)){\r\n            let box = document.getElementById(`row-${id}`)\r\n            box.style.backgroundColor = \"rgb(250, 227, 227)\"\r\n            setcontrol(prev => new Set([...prev].filter(x => x !== row_check)))     \r\n            setselected(prev => new Set([...prev].filter(x => x !== id)))}\r\n        else{\r\n            setcontrol(prev => new Set(prev.add(row_check)))     \r\n            setselected(prev => new Set(prev.add(id)))}\r\n    }\r\n\r\n    function onFinalSubmit(){\r\n        if (selected.size < n_question) {\r\n            var missing = []\r\n            for (let i=0; i < n_question; i++){if (!control.has(i)) missing.push(i)}\r\n            toast.error(\r\n            <span>\r\n                {props.lang==='it'?\r\n                <span>Devi rispondere a tutte le domande, mancano le domande numero: <br/><br/> {missing.join(', ')}\r\n                </span>:\r\n                <span>Missing the following answers <br/><br/> {missing.join(', ')}</span>}\r\n            </span>)\r\n        }\r\n        else{\r\n            const FRESH_DATA = DATA.map(r => {\r\n                selected.has(r.id)? r.isChoiced = 1: r.isChoiced = 0\r\n                return r\r\n            })\r\n\r\n            axios.get(SETTINGS.jsonbin+\"latest\")\r\n                .then(res => {\r\n                    var prev = res.data\r\n                    prev.push(FRESH_DATA)\r\n                    axios.put(SETTINGS.jsonbin, prev)\r\n                        .then(toast.success('Thank you so much <3', {style: {padding:\"100px\"}}))\r\n                        .catch(e => console.log({e}))})\r\n                .catch(e =>  alert(\"Ops something went wrong! be sure that you starting JSONbin is an empty list. Error -> \" +  JSON.stringify(e.message)))\r\n        }\r\n    }\r\n    \r\n\r\n    for (let idx = 0; idx < DATA.length; idx+=3){\r\n        j++\r\n        const options = DATA.slice(idx, idx+ product_profiles)\r\n        const renderedOptions = options.map( r => { \r\n            const HandleChecked = () =>{ \r\n                if (control.has(Math.floor(idx/2.9)) && (selected.has(r.id))){\r\n                    return(\r\n                        <Button color='primary'  key={r.id}\r\n                            id={`btn-${r.id}`}\r\n                            className='question-button-col' \r\n                            onClick={()=>{saveSelect(r.id, idx);}}>\r\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\r\n                    </Button>)} \r\n                else if (control.has(Math.floor(idx/2.9))){\r\n                    return(\r\n                        <Button color='primary'   key={r.id}\r\n                            id={`btn-${r.id}`}\r\n                            className='question-button-col' \r\n                            onClick={()=> {toast.error(\r\n                                <span>\r\n                                {props.lang==='it'? \r\n                                <span>\r\n                                    Numero massimo di scelte è 1 per domanda<br/><br/>\r\n                                    Se vuoi modificare la tua scelta deseleziona \r\n                                    ciò che hai già selezionato.\r\n                                </span>:\r\n                                <span>\r\n                                    Maximum Choice per question is 1 <br/>\r\n                                    Deselect first the other option.\r\n                                </span>}\r\n                                </span>, { style: {backgroundColor:\"rgb(238, 117, 117)\"}}\r\n         \r\n                            )}}>\r\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\r\n                    </Button>)} \r\n                else{\r\n                    return(\r\n                        <Button color='primary'  key={r.id}\r\n                            id={`btn-${r.id}`}\r\n                            className='question-button-col' \r\n                            onClick={()=> {saveSelect(r.id, idx);}}>\r\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\r\n\r\n                    </Button>\r\n                )}}\r\n           \r\n            const AttributesLevels = () => {\r\n                var renderedAttributes = []\r\n                for (let i = 0; i < n_attributes; i++){\r\n                    renderedAttributes.push(<Col xs='12' key={\"mask-\"+i}> {SETTINGS[props.lang].mask[i][r[i]]}</Col>)} \r\n                return renderedAttributes\r\n            }\r\n\r\n            return(\r\n            <Col sm='3' className='record-option text-center' id={`row-${r.id}`} key={\"last-\"+r.id}>\r\n                < AttributesLevels/>\r\n            <Col xs='12'>\r\n                < HandleChecked  />\r\n                </Col>\r\n            </Col>\r\n        )})\r\n\r\n\r\n        const Attributes = () =>{\r\n            var attributes = []\r\n            for (let i = 0; i < n_attributes; i++){\r\n                attributes.push(<Col xs='12' key={\"attrbute-\"+i}>{SETTINGS[props.lang].attributes[[i]]}</Col>);}\r\n            return attributes\r\n        }\r\n\r\n        trial.push(\r\n            <Row className='question-row align-items-center text-left' key={j}>\r\n                <Col xs='12'>\r\n                    <h4>{props.lang==='it'?<p>Domanda  {j}/{SETTINGS.n_questions}</p>:<p>Question  {j}/{SETTINGS.n_questions}</p>}</h4>\r\n                    <h5>\r\n                        {props.lang==='it'?<p>Scegli l'opzione che ritieni migliore.</p>\r\n                        :<p>Select the options that you prefer</p>}\r\n                        </h5>\r\n                </Col>\r\n                <Col sm='3' className='attribute-names text-center'>\r\n                    <h6>{props.lang==='it'?<p>Gli attributi si riferiscono a</p>:<p>The attributes refer to:</p>}</h6>\r\n                    <Attributes/>\r\n                    {window.innerWidth>800? <Col xs='12' className='question-button-col'>&nbsp;</Col>:null}\r\n                </Col>\r\n                    {renderedOptions}\r\n            </Row>\r\n        )\r\n  \r\n    }\r\n\r\n\r\n    return (\r\n        <Container className='text-center question-container'>\r\n             <Toaster />\r\n            <h1 className='questionario-title' id='title'>\r\n                {props.lang==='it'? <span>Questionario</span>: <span>Survey</span> }\r\n            </h1>\r\n            {trial}\r\n            <Col className='col-final-submit'>\r\n                <Button color='success' className='btn-go-form' onClick={()=>onFinalSubmit()}>\r\n                    {props.lang==='it'? <span>Invia Questionario</span>: <span>Submit Form</span> }\r\n                </Button>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CustomForm\r\n","import { SETTINGS } from \"./shared/settings\";\r\n\r\nfunction shuffle_data(data){\r\n    function getRandomSubarray(arr, size) {\r\n        var shuffled = arr.slice(0), i = arr.length, temp, index;\r\n        while (i--) {\r\n            index = Math.floor((i + 1) * Math.random());\r\n            temp = shuffled[index];\r\n            shuffled[index] = shuffled[i];\r\n            shuffled[i] = temp;\r\n        }\r\n        return shuffled.slice(0, size);\r\n    }\r\n    return (getRandomSubarray(data, SETTINGS.n_questions * SETTINGS.product_profiles))\r\n}\r\n\r\nexport default shuffle_data;","\r\nexport const TEXT = {\r\n    en: {\r\n        title: <span>Economies|</span>,\r\n        description: (\r\n            <span>\r\n                Hi, thank you to be here.\r\n                <br />\r\n                \r\n                The following questions are thought to understand the more important\r\n                features for 'Economies' which is an application made for handle the\r\n                domestic economies. Below you can find the main features that you are \r\n                going to rate and also a video (highly recommended, ~ 2m) showing off them. \r\n                \r\n                <br /> <br />\r\n                These features are:\r\n                <ul>\r\n                    <li> Device\r\n                        <ol> \r\n                            <li> Web Application (mobile friendly, but have to browse on google) </li>\r\n                            <li> Smartphone application (installed in your device)  </li>\r\n                        </ol>\r\n                    </li> <br/>\r\n                    <li> Analytical Dashboard\r\n                        <ol> \r\n                            <li> Advanced Graphics (All the graphics shown in \"Dashboard\" during the video) </li>\r\n                            <li> Basic graphics (Only the month summary pie chart in \"Summary\")  </li>\r\n                        </ol>\r\n                    </li><br/>\r\n                    <li> Number of Categories that can be created\r\n                        <ol> \r\n                            <li> Custom categories  5</li>\r\n                            <li> Custom categories 10 </li>\r\n                            <li> Custom categories 15</li>\r\n                        </ol>\r\n                    </li><br/>\r\n                    <li> Number of SubCategories that can be created\r\n                        <ol> \r\n                            <li> Custom subcategories  10</li>\r\n                            <li> Custom subcategories 20 </li>\r\n                            <li> Custom subcategories 50</li>\r\n                        </ol>\r\n                    </li><br/>\r\n                    <li>Price\r\n                        <ol> \r\n                            <li> Completely Free </li>\r\n                            <li> Monthly fee of 1$ </li>\r\n                            <li> Once 5$ </li>\r\n                        </ol>\r\n                    </li><br/>\r\n                </ul>\r\n                The time to complete the form is estimated ~ 9 m.\r\n            </span>\r\n        ),\r\n        h2: <span>Video Tutorial</span>,\r\n        url: \"https://www.youtube.com/embed/FLH7PnAUsLY\",\r\n    },\r\n    it: {\r\n        title: <span>Economies|</span>,\r\n        description: (\r\n            <span>\r\n                Ciao, grazie per essere qui.\r\n                <br />\r\n                Le seguenti domande sono pensate per comprendere quali possono essere \r\n                le features più importanti per un applicazione finalizzata alla gestione \r\n                delle applicazioni domestiche. Di seguito sono illustrate ciò che sono\r\n                state identificate come tali (è inoltre presente un video illustrativo,\r\n                The following questions are thought to understand the more important\r\n                raccomandato dalla durata di circa ~2m)\r\n                <br /> <br />\r\n                Le features sono:\r\n                <ul>\r\n                    <li> Piattaforma\r\n                        <ol> \r\n                            <li> Applicazione Web (mobile friendly, ma necessità di aprire il browser) </li>\r\n                            <li> Applicazione installabile su smartphone  </li>\r\n                        </ol>\r\n                    </li> <br/>\r\n                    <li> Analytical Dashboard\r\n                        <ol> \r\n                            <li> Grafiche avanzate (Tutte le grafiche mostrate nel video di sotto) </li>\r\n                            <li> Grafiche base (Solamente il grafico nella sezione \"Summary\")  </li>\r\n                        </ol>\r\n                    </li><br/>\r\n                    <li> Numero massimo di categorie creabili\r\n                        <ol>\r\n                            <li> Categorie personali consentite  5</li>\r\n                            <li>  Categorie personali consentite 10 </li>\r\n                            <li>  Categorie personali consentite 15</li>\r\n                        </ol>\r\n                    </li><br/>\r\n                    <li> Numero massimo di sottocategorie creabili\r\n                        <ol> \r\n                            <li> SottoCategorie personali consentite  10</li>\r\n                            <li> SottoCategorie personali consentite 20 </li>\r\n                            <li> SottoCategorie personali consentite 50</li>\r\n                        </ol>\r\n                    </li><br/>\r\n\r\n                    <li>Prezzo\r\n                        <ol> \r\n                            <li> Gratis </li>\r\n                            <li> Prezzo mensile di 1$ </li>\r\n                            <li> Prezzo unico per sempre 5$ </li>\r\n                        </ol>\r\n                    </li><br/>\r\n                </ul>\r\n               Il tempo di completamento del form è di circa 9 m + 2 di video.\r\n            </span>\r\n        ),\r\n        h2: <span>Video Tutorial</span>,\r\n        url: \"https://www.youtube.com/embed/FLH7PnAUsLY\",\r\n    },\r\n};\r\n","import ReactCountryFlag from \"react-country-flag\"\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport { TEXT } from './shared/text'\r\nimport Iframe from 'react-iframe'\r\nimport React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col xs='12'>\r\n                    <img src= {process.env.PUBLIC_URL+\"/home.jpg\"} className='home-image' alt='useless image'/>\r\n                </Col>\r\n            </Row>\r\n            <div className='container-div'>\r\n                <Row>\r\n                    <Col xs='12' sm='auto' >\r\n                        <h2 className='home-title' > {TEXT[props.lang].title}<br /><span style={{ fontSize: \"1.5rem\" }}>Conjoint Choice Based Survey</span></h2>\r\n                    </Col>\r\n                    <Col xs='12' md='auto' className='align-self-center text-center'>\r\n                        <Button onClick={() => props.langF('it')} className='italian-button'>\r\n                            <ReactCountryFlag countryCode=\"IT\" svg className='italian-flag' />\r\n                        </Button>\r\n                        <Button onClick={() => props.langF('en')} className='english-button'>\r\n                            <ReactCountryFlag countryCode=\"GB\" svg className=\"english-flag\" />\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs='12' className='home-description-text'><hr />{TEXT[props.lang].description}<hr /></Col>\r\n                    <Col xs='12' className='text-center iframe-container'>\r\n                        <h4>{TEXT[props.lang].title} {props.lang === 'it' ? <span>Dimostrazione</span> : <span>Showing off</span>}</h4>\r\n                        <Iframe url={TEXT[props.lang].url}\r\n                            width=\"100%\"\r\n                            height=\"200%\"\r\n                            allowFullScreen\r\n                            allow=\"fullscreen\" />\r\n                    </Col>\r\n                    <Col xs='12' className='text-center button-go-form'>\r\n                        <hr />\r\n                        <Button color='success' className=\"btn-go-form\" onClick={() => { document.getElementById('title').scrollIntoView({ behavior: \"smooth\" }) }}>\r\n                            {props.lang === 'it' ? <span>Vai al questionario</span> : <span>Go to the Survey</span>}\r\n                        </Button>\r\n                        <hr />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","import {Row , Col, List, ListInlineItem, Container } from 'reactstrap';\r\n\r\nexport const Footer = () => {\r\n    return(\r\n        <Row className='myFooter align-items-center' >\r\n            <Container style={{paddingTop:\"10px\"}}>\r\n            <Col className='text-center'>\r\n                <span>@Copyright GabrieleGhisleni</span>\r\n            </Col>\r\n            <Col className='text-center Icons'>\r\n            <List type=\"inline\">\r\n                            <ListInlineItem>\r\n                                <a href=\"https://github.com/GabrieleGhisleni\">\r\n                                    <i className=\"fa fa-github fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.linkedin.com/in/gabriele-ghisleni-bb553a199/\">\r\n                                    <i className=\"fa fa-linkedin fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"mailto:gabriele.ghisleni01@gmail.com\">\r\n                                    <i className=\"fa fa-envelope-o fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                        </List>\r\n            </Col>\r\n        </Container>\r\n        </Row>  \r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {  Component } from 'react'\r\nimport { Container }from 'reactstrap'\r\n\r\nimport * as data from './shared/data.json';\r\nimport * as axios from 'axios'\r\nimport CustomForm from './CustomForm'\r\nimport shuffle_data from './shuffle';\r\nimport Header from \"./Header\";\r\nimport Footer from './Footer'; \r\nimport { SETTINGS } from './shared/settings';\r\n\r\nclass  Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { lang:'it', previous:null }\r\n        this.changeLang = this.changeLang.bind(this)}\r\n\r\n    changeLang(val){this.setState({lang:val})}\r\n    componentDidMount(){\r\n        axios.get(SETTINGS.jsonbin+\"latest\")\r\n        .then(res => \"\")\r\n        .catch(e => {alert(\"JSON BIN WRONG\")})\r\n    }\r\n    \r\n    render() { \r\n        const DATA = data.default\r\n        const SHUFFLE_DATA = shuffle_data(DATA)\r\n        return ( \r\n        <React.Fragment>\r\n            <Container className='main-container'>\r\n                <Header lang={this.state.lang} langF={this.changeLang}/>\r\n                <CustomForm lang={this.state.lang} data={SHUFFLE_DATA}/>\r\n            </Container>\r\n            <Footer />\r\n        </React.Fragment>  );\r\n    }\r\n}\r\n \r\n\r\nexport default Main;","import React from \"react\";\nimport Main from './components/Main'\nimport './css/style.css'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Main />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}